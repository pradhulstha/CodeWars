/*###Task: You have to write a function pattern which returns the following Pattern(See Pattern & Examples) upto n number of rows.

Note:Returning the pattern is not the same as Printing the pattern.
####Rules/Note:

If n < 1 then it should return "" i.e. empty string.
There are no whitespaces in the pattern.
###Pattern:

(n)(n-1)(n-2)...4321
(n)(n-1)(n-2)...432
(n)(n-1)(n-2)...43
(n)(n-1)(n-2)...4
...............
..............
(n)(n-1)(n-2)
(n)(n-1)
(n)
###Examples:

pattern(4):

4321
432
43
4
pattern(11):

1110987654321
111098765432
11109876543
1110987654
111098765
11109876
1110987
111098
11109
1110
11
*/

//class string and std namespace are already added for you
//Don't use inline function definition

#include <algorithm>
#include <string>


class Pattern{
public:
    static string pattern(int);

};

string Pattern::pattern(int n)
{ 
   string str = "";


   if (n < 1)
    return str;
    
    else
    { 
     for(int i = n; i > 0; --i)
    {
      for(int j = n; j > (n-i); --j)
      {
       str += std::to_string(j);
        
      }
      str = str + "\n";
    }
   }
   
  str = str.substr(0, str.length() - 1); 
 return str;
}
